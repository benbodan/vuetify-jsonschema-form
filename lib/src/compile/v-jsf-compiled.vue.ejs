<script setup>
// @ts-nocheck

import { StatefulLayout } from '@json-layout/core'
import { ref, shallowRef, getCurrentInstance, useSlots } from 'vue'
import { useElementSize } from '@vueuse/core'

import { defaultOptions } from '<%- baseImport %>/components/options.js'
import Tree from '<%- baseImport %>/components/tree.vue'
import { useVjsf, emits } from '<%- baseImport %>/composables/use-vjsf.js'
<% comps.forEach(function(comp){ %>
import <%= comp.replace(/-/g, '') %>Node from '<%- baseImport %>/components/nodes/<%= comp %>.vue'
<% }); %>

<%- compiledLayoutCode %>

const vueInstance = getCurrentInstance()
<% comps.forEach(function(comp){ %>
if (!vueInstance?.appContext.app.component('vjsf-node-<%= comp %>')) {
  vueInstance.appContext.app.component('vjsf-node-<%= comp %>', <%= comp.replace(/-/g, '') %>Node)
}
<% }); %>

const props = defineProps(['modelValue', 'options'])
const emit = defineEmits(Object.keys(emits))

const { el, statefulLayout, stateTree } = useVjsf(
  null,
  computed(() => props.modelValue),
  computed(() => props.options),
  emit,
  null,
  compiledLayout
)
</script>

<template>
  <div ref="el">
    <tree
      v-if="statefulLayout && stateTree"
      :model-value="stateTree"
      :stateful-layout="statefulLayout"
    />
  </div>
</template>